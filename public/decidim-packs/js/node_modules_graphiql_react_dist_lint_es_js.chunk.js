"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_graphiql_react_dist_lint_es_js"],{

/***/ "./node_modules/@graphiql/react/dist/lint.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/lint.es.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es.js */ "./node_modules/@graphiql/react/dist/codemirror.es.js");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/KnownDirectivesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/specifiedRules.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/validate.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/kinds.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/printer.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/parser.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/error/GraphQLError.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs");
/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.es.js */ "./node_modules/@graphiql/react/dist/index.es.js");
/* harmony import */ var _Range_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Range.es.js */ "./node_modules/@graphiql/react/dist/Range.es.js");
/* harmony import */ var _onlineParser_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineParser.es.js */ "./node_modules/@graphiql/react/dist/onlineParser.es.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ "./node_modules/react/index-exposed.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });







const specifiedSDLRules = [
  graphql__WEBPACK_IMPORTED_MODULE_6__.LoneSchemaDefinitionRule,
  graphql__WEBPACK_IMPORTED_MODULE_7__.UniqueOperationTypesRule,
  graphql__WEBPACK_IMPORTED_MODULE_8__.UniqueTypeNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_9__.UniqueEnumValueNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_10__.UniqueFieldDefinitionNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_11__.UniqueDirectiveNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_12__.KnownTypeNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_13__.KnownDirectivesRule,
  graphql__WEBPACK_IMPORTED_MODULE_14__.UniqueDirectivesPerLocationRule,
  graphql__WEBPACK_IMPORTED_MODULE_15__.PossibleTypeExtensionsRule,
  graphql__WEBPACK_IMPORTED_MODULE_16__.UniqueArgumentNamesRule,
  graphql__WEBPACK_IMPORTED_MODULE_17__.UniqueInputFieldNamesRule
];
function validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {
  const rules = graphql__WEBPACK_IMPORTED_MODULE_18__.specifiedRules.filter((rule) => {
    if (rule === graphql__WEBPACK_IMPORTED_MODULE_19__.NoUnusedFragmentsRule || rule === graphql__WEBPACK_IMPORTED_MODULE_20__.ExecutableDefinitionsRule) {
      return false;
    }
    if (isRelayCompatMode && rule === graphql__WEBPACK_IMPORTED_MODULE_21__.KnownFragmentNamesRule) {
      return false;
    }
    return true;
  });
  if (customRules) {
    Array.prototype.push.apply(rules, customRules);
  }
  if (isSchemaDocument) {
    Array.prototype.push.apply(rules, specifiedSDLRules);
  }
  const errors = (0,graphql__WEBPACK_IMPORTED_MODULE_22__.validate)(schema, ast, rules);
  return errors.filter((error) => {
    if (error.message.indexOf("Unknown directive") !== -1 && error.nodes) {
      const node = error.nodes[0];
      if (node && node.kind === graphql__WEBPACK_IMPORTED_MODULE_23__.Kind.DIRECTIVE) {
        const name = node.name.value;
        if (name === "arguments" || name === "argumentDefinitions") {
          return false;
        }
      }
    }
    return true;
  });
}
__name(validateWithCustomRules, "validateWithCustomRules");
const SEVERITY$1 = {
  Error: "Error",
  Warning: "Warning",
  Information: "Information",
  Hint: "Hint"
};
const DIAGNOSTIC_SEVERITY = {
  [SEVERITY$1.Error]: 1,
  [SEVERITY$1.Warning]: 2,
  [SEVERITY$1.Information]: 3,
  [SEVERITY$1.Hint]: 4
};
const invariant = /* @__PURE__ */ __name((condition, message) => {
  if (!condition) {
    throw new Error(message);
  }
}, "invariant");
function getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {
  var _a, _b;
  let ast = null;
  if (externalFragments) {
    if (typeof externalFragments === "string") {
      query += "\n\n" + externalFragments;
    } else {
      query += "\n\n" + externalFragments.reduce((agg, node) => {
        agg += (0,graphql__WEBPACK_IMPORTED_MODULE_24__.print)(node) + "\n\n";
        return agg;
      }, "");
    }
  }
  try {
    ast = (0,graphql__WEBPACK_IMPORTED_MODULE_25__.parse)(query);
  } catch (error) {
    if (error instanceof graphql__WEBPACK_IMPORTED_MODULE_26__.GraphQLError) {
      const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, query);
      return [
        {
          severity: DIAGNOSTIC_SEVERITY.Error,
          message: error.message,
          source: "GraphQL: Syntax",
          range
        }
      ];
    }
    throw error;
  }
  return validateQuery(ast, schema, customRules, isRelayCompatMode);
}
__name(getDiagnostics, "getDiagnostics");
function validateQuery(ast, schema = null, customRules, isRelayCompatMode) {
  if (!schema) {
    return [];
  }
  const validationErrorAnnotations = mapCat(validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Error, "Validation"));
  const deprecationWarningAnnotations = mapCat((0,graphql__WEBPACK_IMPORTED_MODULE_22__.validate)(schema, ast, [graphql__WEBPACK_IMPORTED_MODULE_27__.NoDeprecatedCustomRule]), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Warning, "Deprecation"));
  return validationErrorAnnotations.concat(deprecationWarningAnnotations);
}
__name(validateQuery, "validateQuery");
function mapCat(array, mapper) {
  return Array.prototype.concat.apply([], array.map(mapper));
}
__name(mapCat, "mapCat");
function annotations(error, severity, type) {
  if (!error.nodes) {
    return [];
  }
  const highlightedNodes = [];
  error.nodes.forEach((node) => {
    const highlightNode = node.kind !== "Variable" && "name" in node && node.name !== void 0 ? node.name : "variable" in node && node.variable !== void 0 ? node.variable : node;
    if (highlightNode) {
      invariant(error.locations, "GraphQL validation error requires locations.");
      const loc = error.locations[0];
      const highlightLoc = getLocation(highlightNode);
      const end = loc.column + (highlightLoc.end - highlightLoc.start);
      highlightedNodes.push({
        source: `GraphQL: ${type}`,
        message: error.message,
        severity,
        range: new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.R(new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(loc.line - 1, loc.column - 1), new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(loc.line - 1, end))
      });
    }
  });
  return highlightedNodes;
}
__name(annotations, "annotations");
function getRange(location, queryText) {
  const parser = (0,_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_3__.o)();
  const state = parser.startState();
  const lines = queryText.split("\n");
  invariant(lines.length >= location.line, "Query text must have more lines than where the error happened");
  let stream = null;
  for (let i = 0; i < location.line; i++) {
    stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.C(lines[i]);
    while (!stream.eol()) {
      const style = parser.token(stream, state);
      if (style === "invalidchar") {
        break;
      }
    }
  }
  invariant(stream, "Expected Parser stream to be available.");
  const line = location.line - 1;
  const start = stream.getStartOfToken();
  const end = stream.getCurrentPosition();
  return new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.R(new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(line, start), new _Range_es_js__WEBPACK_IMPORTED_MODULE_2__.P(line, end));
}
__name(getRange, "getRange");
function getLocation(node) {
  const typeCastedNode = node;
  const location = typeCastedNode.loc;
  invariant(location, "Expected ASTNode to have a location.");
  return location;
}
__name(getLocation, "getLocation");
const SEVERITY = ["error", "warning", "information", "hint"];
const TYPE = {
  "GraphQL: Validation": "validation",
  "GraphQL: Deprecation": "deprecation",
  "GraphQL: Syntax": "syntax"
};
_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("lint", "graphql", (text, options) => {
  const schema = options.schema;
  const rawResults = getDiagnostics(text, schema, options.validationRules, void 0, options.externalFragments);
  const results = rawResults.map((error) => ({
    message: error.message,
    severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],
    type: error.source ? TYPE[error.source] : void 0,
    from: _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(error.range.start.line, error.range.start.character),
    to: _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(error.range.end.line, error.range.end.character)
  }));
  return results;
});


/***/ })

}]);
//# sourceMappingURL=node_modules_graphiql_react_dist_lint_es_js.chunk.js.map