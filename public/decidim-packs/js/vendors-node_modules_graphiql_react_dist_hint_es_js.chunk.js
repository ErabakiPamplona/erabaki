"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["vendors-node_modules_graphiql_react_dist_hint_es_js"],{

/***/ "./node_modules/@graphiql/react/dist/hint.es.js":
/*!******************************************************!*\
  !*** ./node_modules/@graphiql/react/dist/hint.es.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codemirror.es.js */ "./node_modules/@graphiql/react/dist/codemirror.es.js");
/* harmony import */ var _show_hint_es_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./show-hint.es.js */ "./node_modules/@graphiql/react/dist/show-hint.es.js");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/type/definition.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/visitor.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/parser.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/type/introspection.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/type/scalars.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/utilities/typeComparators.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/kinds.mjs");
/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ "./node_modules/graphql/language/directiveLocation.mjs");
/* harmony import */ var _index_es_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.es.js */ "./node_modules/@graphiql/react/dist/index.es.js");
/* harmony import */ var _Range_es_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Range.es.js */ "./node_modules/@graphiql/react/dist/Range.es.js");
/* harmony import */ var _onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./onlineParser.es.js */ "./node_modules/@graphiql/react/dist/onlineParser.es.js");
/* harmony import */ var _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./introspection.es.js */ "./node_modules/@graphiql/react/dist/introspection.es.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index-exposed.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });









function getDefinitionState(tokenState) {
  let definitionState;
  forEachState(tokenState, (state) => {
    switch (state.kind) {
      case "Query":
      case "ShortQuery":
      case "Mutation":
      case "Subscription":
      case "FragmentDefinition":
        definitionState = state;
        break;
    }
  });
  return definitionState;
}
__name(getDefinitionState, "getDefinitionState");
function getFieldDef(schema, type, fieldName) {
  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S.name && schema.getQueryType() === type) {
    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.S;
  }
  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T.name && schema.getQueryType() === type) {
    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.T;
  }
  if (fieldName === _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a.name && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type)) {
    return _introspection_es_js__WEBPACK_IMPORTED_MODULE_5__.a;
  }
  if ("getFields" in type) {
    return type.getFields()[fieldName];
  }
  return null;
}
__name(getFieldDef, "getFieldDef");
function forEachState(stack, fn) {
  const reverseStateStack = [];
  let state = stack;
  while (state === null || state === void 0 ? void 0 : state.kind) {
    reverseStateStack.push(state);
    state = state.prevState;
  }
  for (let i = reverseStateStack.length - 1; i >= 0; i--) {
    fn(reverseStateStack[i]);
  }
}
__name(forEachState, "forEachState");
function objectValues(object) {
  const keys = Object.keys(object);
  const len = keys.length;
  const values = new Array(len);
  for (let i = 0; i < len; ++i) {
    values[i] = object[keys[i]];
  }
  return values;
}
__name(objectValues, "objectValues");
function hintList(token, list) {
  return filterAndSortList(list, normalizeText(token.string));
}
__name(hintList, "hintList");
function filterAndSortList(list, text) {
  if (!text) {
    return filterNonEmpty(list, (entry) => !entry.isDeprecated);
  }
  const byProximity = list.map((entry) => ({
    proximity: getProximity(normalizeText(entry.label), text),
    entry
  }));
  return filterNonEmpty(filterNonEmpty(byProximity, (pair) => pair.proximity <= 2), (pair) => !pair.entry.isDeprecated).sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.label.length - b.entry.label.length).map((pair) => pair.entry);
}
__name(filterAndSortList, "filterAndSortList");
function filterNonEmpty(array, predicate) {
  const filtered = array.filter(predicate);
  return filtered.length === 0 ? array : filtered;
}
__name(filterNonEmpty, "filterNonEmpty");
function normalizeText(text) {
  return text.toLowerCase().replace(/\W/g, "");
}
__name(normalizeText, "normalizeText");
function getProximity(suggestion, text) {
  let proximity = lexicalDistance(text, suggestion);
  if (suggestion.length > text.length) {
    proximity -= suggestion.length - text.length - 1;
    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;
  }
  return proximity;
}
__name(getProximity, "getProximity");
function lexicalDistance(a, b) {
  let i;
  let j;
  const d = [];
  const aLength = a.length;
  const bLength = b.length;
  for (i = 0; i <= aLength; i++) {
    d[i] = [i];
  }
  for (j = 1; j <= bLength; j++) {
    d[0][j] = j;
  }
  for (i = 1; i <= aLength; i++) {
    for (j = 1; j <= bLength; j++) {
      const cost = a[i - 1] === b[j - 1] ? 0 : 1;
      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);
      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {
        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
      }
    }
  }
  return d[aLength][bLength];
}
__name(lexicalDistance, "lexicalDistance");
const SuggestionCommand = {
  command: "editor.action.triggerSuggest",
  title: "Suggestions"
};
const collectFragmentDefs = /* @__PURE__ */ __name((op) => {
  const externalFragments = [];
  if (op) {
    try {
      (0,graphql__WEBPACK_IMPORTED_MODULE_9__.visit)((0,graphql__WEBPACK_IMPORTED_MODULE_10__.parse)(op), {
        FragmentDefinition(def) {
          externalFragments.push(def);
        }
      });
    } catch (_a) {
      return [];
    }
  }
  return externalFragments;
}, "collectFragmentDefs");
function getAutocompleteSuggestions(schema, queryText, cursor, contextToken, fragmentDefs, options) {
  var _a;
  const opts = Object.assign(Object.assign({}, options), { schema });
  const token = contextToken || getTokenAtPosition(queryText, cursor);
  const state = token.state.kind === "Invalid" ? token.state.prevState : token.state;
  if (!state) {
    return [];
  }
  const kind = state.kind;
  const step = state.step;
  const typeInfo = getTypeInfo(schema, token.state);
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DOCUMENT) {
    return hintList(token, [
      { label: "query", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },
      { label: "mutation", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },
      { label: "subscription", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },
      { label: "fragment", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function },
      { label: "{", kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Constructor }
    ]);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {
    return getSuggestionsForImplements(token, state, schema, queryText, typeInfo);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD) {
    return getSuggestionsForFieldNames(token, typeInfo, opts);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 0) {
    const argDefs = typeInfo.argDefs;
    if (argDefs) {
      return hintList(token, argDefs.map((argDef) => {
        var _a2;
        return {
          label: argDef.name,
          insertText: argDef.name + ": ",
          command: SuggestionCommand,
          detail: String(argDef.type),
          documentation: (_a2 = argDef.description) !== null && _a2 !== void 0 ? _a2 : void 0,
          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,
          type: argDef.type
        };
      }));
    }
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 0) {
    if (typeInfo.objectFieldDefs) {
      const objectFields = objectValues(typeInfo.objectFieldDefs);
      const completionKind = kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE ? _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Value : _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field;
      return hintList(token, objectFields.map((field) => {
        var _a2;
        return {
          label: field.name,
          detail: String(field.type),
          documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,
          kind: completionKind,
          type: field.type
        };
      }));
    }
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT && step === 2) {
    return getSuggestionsForInputValues(token, typeInfo, queryText, schema);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && step === 1) {
    const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(typeInfo.inputType);
    const variableDefinitions = getVariableCompletions(queryText, schema, token);
    return hintList(token, variableDefinitions.filter((v) => v.detail === (namedInputType === null || namedInputType === void 0 ? void 0 : namedInputType.name)));
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState != null && state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE_CONDITION) {
    return getSuggestionsForFragmentTypeConditions(token, typeInfo, schema);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD && step === 1) {
    return getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, Array.isArray(fragmentDefs) ? fragmentDefs : collectFragmentDefs(fragmentDefs));
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION && step === 2 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE && step === 1 || kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && state.prevState && (state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE_DEFINITION || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_TYPE || state.prevState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NON_NULL_TYPE)) {
    return getSuggestionsForVariableDefinition(token, schema);
  }
  if (kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE) {
    return getSuggestionsForDirective(token, state, schema);
  }
  return [];
}
__name(getAutocompleteSuggestions, "getAutocompleteSuggestions");
const insertSuffix = ` {
  $1
}`;
const getInsertText = /* @__PURE__ */ __name((field) => {
  const type = field.type;
  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type)) {
    return insertSuffix;
  }
  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isListType)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType)) {
    return insertSuffix;
  }
  if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isNonNullType)(type)) {
    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType)) {
      return insertSuffix;
    }
    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isListType)(type.ofType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(type.ofType.ofType)) {
      return insertSuffix;
    }
  }
  return null;
}, "getInsertText");
function getSuggestionsForFieldNames(token, typeInfo, options) {
  var _a;
  if (typeInfo.parentType) {
    const parentType = typeInfo.parentType;
    let fields = [];
    if ("getFields" in parentType) {
      fields = objectValues(parentType.getFields());
    }
    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(parentType)) {
      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__.TypeNameMetaFieldDef);
    }
    if (parentType === ((_a = options === null || options === void 0 ? void 0 : options.schema) === null || _a === void 0 ? void 0 : _a.getQueryType())) {
      fields.push(graphql__WEBPACK_IMPORTED_MODULE_11__.SchemaMetaFieldDef, graphql__WEBPACK_IMPORTED_MODULE_11__.TypeMetaFieldDef);
    }
    return hintList(token, fields.map((field, index) => {
      var _a2;
      const suggestion = {
        sortText: String(index) + field.name,
        label: field.name,
        detail: String(field.type),
        documentation: (_a2 = field.description) !== null && _a2 !== void 0 ? _a2 : void 0,
        deprecated: Boolean(field.deprecationReason),
        isDeprecated: Boolean(field.deprecationReason),
        deprecationReason: field.deprecationReason,
        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,
        type: field.type
      };
      const insertText = getInsertText(field);
      if (insertText) {
        suggestion.insertText = field.name + insertText;
        suggestion.insertTextFormat = _index_es_js__WEBPACK_IMPORTED_MODULE_2__.I.Snippet;
        suggestion.command = SuggestionCommand;
      }
      return suggestion;
    }));
  }
  return [];
}
__name(getSuggestionsForFieldNames, "getSuggestionsForFieldNames");
function getSuggestionsForInputValues(token, typeInfo, queryText, schema) {
  const namedInputType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(typeInfo.inputType);
  const queryVariables = getVariableCompletions(queryText, schema, token).filter((v) => v.detail === namedInputType.name);
  if (namedInputType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLEnumType) {
    const values = namedInputType.getValues();
    return hintList(token, values.map((value) => {
      var _a;
      return {
        label: value.name,
        detail: String(namedInputType),
        documentation: (_a = value.description) !== null && _a !== void 0 ? _a : void 0,
        deprecated: Boolean(value.deprecationReason),
        isDeprecated: Boolean(value.deprecationReason),
        deprecationReason: value.deprecationReason,
        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.EnumMember,
        type: namedInputType
      };
    }).concat(queryVariables));
  } else if (namedInputType === graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean) {
    return hintList(token, queryVariables.concat([
      {
        label: "true",
        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean),
        documentation: "Not false.",
        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,
        type: graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean
      },
      {
        label: "false",
        detail: String(graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean),
        documentation: "Not true.",
        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable,
        type: graphql__WEBPACK_IMPORTED_MODULE_12__.GraphQLBoolean
      }
    ]));
  }
  return queryVariables;
}
__name(getSuggestionsForInputValues, "getSuggestionsForInputValues");
function getSuggestionsForImplements(token, tokenState, schema, documentText, typeInfo) {
  if (tokenState.needsSeparator) {
    return [];
  }
  const typeMap = schema.getTypeMap();
  const schemaInterfaces = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType);
  const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);
  const inlineInterfaces = /* @__PURE__ */ new Set();
  runOnlineParser(documentText, (_, state) => {
    var _a, _b, _c, _d, _e;
    if (state.name) {
      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF && !schemaInterfaceNames.includes(state.name)) {
        inlineInterfaces.add(state.name);
      }
      if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.IMPLEMENTS) {
        if (typeInfo.interfaceDef) {
          const existingType = (_b = typeInfo.interfaceDef) === null || _b === void 0 ? void 0 : _b.getInterfaces().find(({ name }) => name === state.name);
          if (existingType) {
            return;
          }
          const type = schema.getType(state.name);
          const interfaceConfig = (_c = typeInfo.interfaceDef) === null || _c === void 0 ? void 0 : _c.toConfig();
          typeInfo.interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType(Object.assign(Object.assign({}, interfaceConfig), { interfaces: [
            ...interfaceConfig.interfaces,
            type || new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({ name: state.name, fields: {} })
          ] }));
        } else if (typeInfo.objectTypeDef) {
          const existingType = (_d = typeInfo.objectTypeDef) === null || _d === void 0 ? void 0 : _d.getInterfaces().find(({ name }) => name === state.name);
          if (existingType) {
            return;
          }
          const type = schema.getType(state.name);
          const objectTypeConfig = (_e = typeInfo.objectTypeDef) === null || _e === void 0 ? void 0 : _e.toConfig();
          typeInfo.objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLObjectType(Object.assign(Object.assign({}, objectTypeConfig), { interfaces: [
            ...objectTypeConfig.interfaces,
            type || new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({ name: state.name, fields: {} })
          ] }));
        }
      }
    }
  });
  const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;
  const siblingInterfaces = (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.getInterfaces()) || [];
  const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);
  const possibleInterfaces = schemaInterfaces.concat([...inlineInterfaces].map((name) => ({ name }))).filter(({ name }) => name !== (currentTypeToExtend === null || currentTypeToExtend === void 0 ? void 0 : currentTypeToExtend.name) && !siblingInterfaceNames.includes(name));
  return hintList(token, possibleInterfaces.map((type) => {
    const result = {
      label: type.name,
      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Interface,
      type
    };
    if (type === null || type === void 0 ? void 0 : type.description) {
      result.documentation = type.description;
    }
    return result;
  }));
}
__name(getSuggestionsForImplements, "getSuggestionsForImplements");
function getSuggestionsForFragmentTypeConditions(token, typeInfo, schema, _kind) {
  let possibleTypes;
  if (typeInfo.parentType) {
    if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isAbstractType)(typeInfo.parentType)) {
      const abstractType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.assertAbstractType)(typeInfo.parentType);
      const possibleObjTypes = schema.getPossibleTypes(abstractType);
      const possibleIfaceMap = /* @__PURE__ */ Object.create(null);
      possibleObjTypes.forEach((type) => {
        type.getInterfaces().forEach((iface) => {
          possibleIfaceMap[iface.name] = iface;
        });
      });
      possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));
    } else {
      possibleTypes = [typeInfo.parentType];
    }
  } else {
    const typeMap = schema.getTypeMap();
    possibleTypes = objectValues(typeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType);
  }
  return hintList(token, possibleTypes.map((type) => {
    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);
    return {
      label: String(type),
      documentation: (namedType === null || namedType === void 0 ? void 0 : namedType.description) || "",
      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field
    };
  }));
}
__name(getSuggestionsForFragmentTypeConditions, "getSuggestionsForFragmentTypeConditions");
function getSuggestionsForFragmentSpread(token, typeInfo, schema, queryText, fragmentDefs) {
  if (!queryText) {
    return [];
  }
  const typeMap = schema.getTypeMap();
  const defState = getDefinitionState(token.state);
  const fragments = getFragmentDefinitions(queryText);
  if (fragmentDefs && fragmentDefs.length > 0) {
    fragments.push(...fragmentDefs);
  }
  const relevantFrags = fragments.filter((frag) => typeMap[frag.typeCondition.name.value] && !(defState && defState.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && defState.name === frag.name.value) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(typeInfo.parentType) && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isCompositeType)(typeMap[frag.typeCondition.name.value]) && (0,graphql__WEBPACK_IMPORTED_MODULE_13__.doTypesOverlap)(schema, typeInfo.parentType, typeMap[frag.typeCondition.name.value]));
  return hintList(token, relevantFrags.map((frag) => ({
    label: frag.name.value,
    detail: String(typeMap[frag.typeCondition.name.value]),
    documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,
    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Field,
    type: typeMap[frag.typeCondition.name.value]
  })));
}
__name(getSuggestionsForFragmentSpread, "getSuggestionsForFragmentSpread");
const getParentDefinition = /* @__PURE__ */ __name((state, kind) => {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
  if (((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) === kind) {
    return state.prevState;
  }
  if (((_c = (_b = state.prevState) === null || _b === void 0 ? void 0 : _b.prevState) === null || _c === void 0 ? void 0 : _c.kind) === kind) {
    return state.prevState.prevState;
  }
  if (((_f = (_e = (_d = state.prevState) === null || _d === void 0 ? void 0 : _d.prevState) === null || _e === void 0 ? void 0 : _e.prevState) === null || _f === void 0 ? void 0 : _f.kind) === kind) {
    return state.prevState.prevState.prevState;
  }
  if (((_k = (_j = (_h = (_g = state.prevState) === null || _g === void 0 ? void 0 : _g.prevState) === null || _h === void 0 ? void 0 : _h.prevState) === null || _j === void 0 ? void 0 : _j.prevState) === null || _k === void 0 ? void 0 : _k.kind) === kind) {
    return state.prevState.prevState.prevState.prevState;
  }
}, "getParentDefinition");
function getVariableCompletions(queryText, schema, token) {
  let variableName = null;
  let variableType;
  const definitions = /* @__PURE__ */ Object.create({});
  runOnlineParser(queryText, (_, state) => {
    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.VARIABLE && state.name) {
      variableName = state.name;
    }
    if ((state === null || state === void 0 ? void 0 : state.kind) === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE && variableName) {
      const parentDefinition = getParentDefinition(state, _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.TYPE);
      if (parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type) {
        variableType = schema.getType(parentDefinition === null || parentDefinition === void 0 ? void 0 : parentDefinition.type);
      }
    }
    if (variableName && variableType) {
      if (!definitions[variableName]) {
        definitions[variableName] = {
          detail: variableType.toString(),
          insertText: token.string === "$" ? variableName : "$" + variableName,
          label: variableName,
          type: variableType,
          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable
        };
        variableName = null;
        variableType = null;
      }
    }
  });
  return objectValues(definitions);
}
__name(getVariableCompletions, "getVariableCompletions");
function getFragmentDefinitions(queryText) {
  const fragmentDefs = [];
  runOnlineParser(queryText, (_, state) => {
    if (state.kind === _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION && state.name && state.type) {
      fragmentDefs.push({
        kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION,
        name: {
          kind: graphql__WEBPACK_IMPORTED_MODULE_14__.Kind.NAME,
          value: state.name
        },
        selectionSet: {
          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET,
          selections: []
        },
        typeCondition: {
          kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE,
          name: {
            kind: graphql__WEBPACK_IMPORTED_MODULE_14__.Kind.NAME,
            value: state.type
          }
        }
      });
    }
  });
  return fragmentDefs;
}
__name(getFragmentDefinitions, "getFragmentDefinitions");
function getSuggestionsForVariableDefinition(token, schema, _kind) {
  const inputTypeMap = schema.getTypeMap();
  const inputTypes = objectValues(inputTypeMap).filter(graphql__WEBPACK_IMPORTED_MODULE_8__.isInputType);
  return hintList(token, inputTypes.map((type) => ({
    label: type.name,
    documentation: type.description,
    kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Variable
  })));
}
__name(getSuggestionsForVariableDefinition, "getSuggestionsForVariableDefinition");
function getSuggestionsForDirective(token, state, schema, _kind) {
  var _a;
  if ((_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind) {
    const directives = schema.getDirectives().filter((directive) => canUseDirective(state.prevState, directive));
    return hintList(token, directives.map((directive) => ({
      label: directive.name,
      documentation: directive.description || "",
      kind: _index_es_js__WEBPACK_IMPORTED_MODULE_2__.C.Function
    })));
  }
  return [];
}
__name(getSuggestionsForDirective, "getSuggestionsForDirective");
function getTokenAtPosition(queryText, cursor) {
  let styleAtCursor = null;
  let stateAtCursor = null;
  let stringAtCursor = null;
  const token = runOnlineParser(queryText, (stream, state, style, index) => {
    if (index === cursor.line) {
      if (stream.getCurrentPosition() >= cursor.character) {
        styleAtCursor = style;
        stateAtCursor = Object.assign({}, state);
        stringAtCursor = stream.current();
        return "BREAK";
      }
    }
  });
  return {
    start: token.start,
    end: token.end,
    string: stringAtCursor || token.string,
    state: stateAtCursor || token.state,
    style: styleAtCursor || token.style
  };
}
__name(getTokenAtPosition, "getTokenAtPosition");
function runOnlineParser(queryText, callback) {
  const lines = queryText.split("\n");
  const parser = (0,_onlineParser_es_js__WEBPACK_IMPORTED_MODULE_4__.o)();
  let state = parser.startState();
  let style = "";
  let stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C("");
  for (let i = 0; i < lines.length; i++) {
    stream = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.C(lines[i]);
    while (!stream.eol()) {
      style = parser.token(stream, state);
      const code = callback(stream, state, style, i);
      if (code === "BREAK") {
        break;
      }
    }
    callback(stream, state, style, i);
    if (!state.kind) {
      state = parser.startState();
    }
  }
  return {
    start: stream.getStartOfToken(),
    end: stream.getCurrentPosition(),
    string: stream.current(),
    state,
    style
  };
}
__name(runOnlineParser, "runOnlineParser");
function canUseDirective(state, directive) {
  var _a;
  if (!state || !state.kind) {
    return false;
  }
  const kind = state.kind;
  const locations = directive.locations;
  switch (kind) {
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.QUERY) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.MUTATION) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SUBSCRIPTION) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FIELD) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FRAGMENT_DEFINITION) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_SPREAD:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FRAGMENT_SPREAD) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INLINE_FRAGMENT) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCHEMA_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SCHEMA) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SCALAR_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.SCALAR) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.OBJECT) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.FIELD_DEFINITION) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INTERFACE) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.UNION_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.UNION) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ENUM) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ENUM_VALUE) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:
      return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INPUT_OBJECT) !== -1;
    case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_VALUE_DEF:
      const prevStateKind = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.kind;
      switch (prevStateKind) {
        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS_DEF:
          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.ARGUMENT_DEFINITION) !== -1;
        case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INPUT_DEF:
          return locations.indexOf(graphql__WEBPACK_IMPORTED_MODULE_15__.DirectiveLocation.INPUT_FIELD_DEFINITION) !== -1;
      }
  }
  return false;
}
__name(canUseDirective, "canUseDirective");
function getTypeInfo(schema, tokenState) {
  let argDef;
  let argDefs;
  let directiveDef;
  let enumValue;
  let fieldDef;
  let inputType;
  let objectTypeDef;
  let objectFieldDefs;
  let parentType;
  let type;
  let interfaceDef;
  forEachState(tokenState, (state) => {
    var _a;
    switch (state.kind) {
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.QUERY:
      case "ShortQuery":
        type = schema.getQueryType();
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.MUTATION:
        type = schema.getMutationType();
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SUBSCRIPTION:
        type = schema.getSubscriptionType();
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INLINE_FRAGMENT:
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FRAGMENT_DEFINITION:
        if (state.type) {
          type = schema.getType(state.type);
        }
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {
        if (!type || !state.name) {
          fieldDef = null;
        } else {
          fieldDef = parentType ? getFieldDef(schema, parentType, state.name) : null;
          type = fieldDef ? fieldDef.type : null;
        }
        break;
      }
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.SELECTION_SET:
        parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:
        directiveDef = state.name ? schema.getDirective(state.name) : null;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.INTERFACE_DEF:
        if (state.name) {
          objectTypeDef = null;
          interfaceDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInterfaceType({
            name: state.name,
            interfaces: [],
            fields: {}
          });
        }
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_TYPE_DEF:
        if (state.name) {
          interfaceDef = null;
          objectTypeDef = new graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLObjectType({
            name: state.name,
            interfaces: [],
            fields: {}
          });
        }
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENTS: {
        if (!state.prevState) {
          argDefs = null;
        } else {
          switch (state.prevState.kind) {
            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.FIELD:
              argDefs = fieldDef && fieldDef.args;
              break;
            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.DIRECTIVE:
              argDefs = directiveDef && directiveDef.args;
              break;
            case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ALIASED_FIELD: {
              const name = (_a = state.prevState) === null || _a === void 0 ? void 0 : _a.name;
              if (!name) {
                argDefs = null;
                break;
              }
              const field = parentType ? getFieldDef(schema, parentType, name) : null;
              if (!field) {
                argDefs = null;
                break;
              }
              argDefs = field.args;
              break;
            }
            default:
              argDefs = null;
              break;
          }
        }
        break;
      }
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ARGUMENT:
        if (argDefs) {
          for (let i = 0; i < argDefs.length; i++) {
            if (argDefs[i].name === state.name) {
              argDef = argDefs[i];
              break;
            }
          }
        }
        inputType = argDef === null || argDef === void 0 ? void 0 : argDef.type;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.ENUM_VALUE:
        const enumType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(inputType);
        enumValue = enumType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLEnumType ? enumType.getValues().find((val) => val.value === state.name) : null;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.LIST_VALUE:
        const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNullableType)(inputType);
        inputType = nullableType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLList ? nullableType.ofType : null;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_VALUE:
        const objectType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(inputType);
        objectFieldDefs = objectType instanceof graphql__WEBPACK_IMPORTED_MODULE_8__.GraphQLInputObjectType ? objectType.getFields() : null;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.OBJECT_FIELD:
        const objectField = state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;
        inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;
        break;
      case _index_es_js__WEBPACK_IMPORTED_MODULE_2__.R.NAMED_TYPE:
        if (state.name) {
          type = schema.getType(state.name);
        }
        break;
    }
  });
  return {
    argDef,
    argDefs,
    directiveDef,
    enumValue,
    fieldDef,
    inputType,
    objectFieldDefs,
    parentType,
    type,
    interfaceDef,
    objectTypeDef
  };
}
__name(getTypeInfo, "getTypeInfo");
_codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.registerHelper("hint", "graphql", (editor, options) => {
  const schema = options.schema;
  if (!schema) {
    return;
  }
  const cur = editor.getCursor();
  const token = editor.getTokenAt(cur);
  const tokenStart = token.type !== null && /"|\w/.test(token.string[0]) ? token.start : token.end;
  const position = new _Range_es_js__WEBPACK_IMPORTED_MODULE_3__.P(cur.line, tokenStart);
  const rawResults = getAutocompleteSuggestions(schema, editor.getValue(), position, token, options.externalFragments);
  const results = {
    list: rawResults.map((item) => ({
      text: item.label,
      type: item.type,
      description: item.documentation,
      isDeprecated: item.isDeprecated,
      deprecationReason: item.deprecationReason
    })),
    from: { line: cur.line, ch: tokenStart },
    to: { line: cur.line, ch: token.end }
  };
  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {
    results.from = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.from.line, results.from.ch);
    results.to = _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.Pos(results.to.line, results.to.ch);
    _codemirror_es_js__WEBPACK_IMPORTED_MODULE_0__.C.signal(editor, "hasCompletion", editor, results, token);
  }
  return results;
});


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_graphiql_react_dist_hint_es_js.chunk.js.map